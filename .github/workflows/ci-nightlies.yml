# SPDX-FileCopyrightText: 2024-2025 The DeckCheatz Developers
#
# SPDX-License-Identifier: Apache-2.0
name: Nightly builds
on:
  workflow_dispatch:
  schedule:
    - cron: 0 0 * * 1
env:
  CARGO_TERM_COLOR: always
jobs:
  check_date:
    runs-on: ubuntu-latest
    name: Check latest commit
    outputs:
      should_run: ${{ steps.should_run.outputs.should_run }}
    steps:
      - uses: actions/checkout@v4.1.7
        with:
          fetch-depth: 0
      - id: should_run
        continue-on-error: true
        name: Check latest commit is less than a day
        if: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}
        run: test -z "$(git rev-list  --after='24 hours' ${{ github.sha }})" \ || echo "should_run=true" >> "$GITHUB_OUTPUT"
  build-nightlies-linux:
    name: Nightly builds for Linux (x86_64-unknown-linux-musl)
    runs-on: ubuntu-latest
    needs: check_date
    if: ${{ needs.check_date.outputs.should_run }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4.1.7
      - name: Cache Rust assets
        id: rust-cache
        uses: Swatinem/rust-cache@v2
      - name: Configure Rust
        if: ${{ steps.rust-cache.outputs.cache-hit == 'false' }}
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview
          targets: x86_64-unknown-linux-musl
      - name: Install Cross
        if: ${{ steps.rust-cache.outputs.cache-hit == 'false' }}
        uses: brndnmtthws/rust-action-cargo-binstall@v1.1.0
        with:
          packages: cross
      - name: Build for x86_64-unknown-linux-musl
        id: build
        run: cargo cross build --all --locked --verbose --target=x86_64-unknown-linux-musl
      - name: Zip up the artifacts
        id: zipup
        if: ${{ steps.build.outcome == 'success' }}
        run: zip ${{ github.workspace }}/deckcheatz-nightly-x86_64-unknown-linux-musl.zip ${{ github.workspace }}/target/x86_64-unknown-linux-musl/debug/deckcheatz
      - name: Create nightly release
        continue-on-error: true
        if: ${{ steps.zipup.outcome == 'success' }}
        uses: actions/create-release@v1
        with:
          draft: false
          prerelease: true
          body: "Nightly build of `DeckCheatz` for target: x86_64-unknown-linux-musl"
          release_name: deckcheatz-nightly-x86_64-unknown-linux-musl
          tag_name: deckcheatz-nightly-x86_64-unknown-linux-musl
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Upload debug nightly build
        run: gh release upload deckcheatz-nightly-x86_64-unknown-linux-musl ${{ github.workspace }}/deckcheatz-nightly-x86_64-unknown-linux-musl.zip --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  upload-nix-derivation:
    name: Upload Nix to Cachix
    needs: check_date
    if: ${{ needs.check_date.outputs.should_run }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v16
        with:
          name: deckcheatz-nightlies
          authToken: "${{ secrets.CACHIX_NIGHTLIES_AUTH_TOKEN }}"
      - run: nix-build
      - run: nix-shell --run "echo OK"
